worker_processes 3;

events {
    worker_connections 1024;
}

http {
    # Client -> Nginx KeepAlive 설정
    keepalive_timeout 30s;
    keepalive_requests 100;

    # Nginx -> Server KeepAlive 설정
    # 기본적으로 RoundRobin 형식으로 돌아감
    upstream auth {
        # Container 에 떠있는 Nginx 를 Host 에 떠있는 서버로 전송
        server host.docker.internal:8080;
#         server host.docker.internal:8081;
        keepalive 10;
        keepalive_timeout 50s;
    }

    upstream message {
        # Container 에 떠있는 Nginx 를 Host 에 떠있는 서버로 전송
        server host.docker.internal:8090;
    }

    server {
        listen 80;
        location /api/ {
            proxy_pass http://auth;
            # 이 설정이 없으면 Nginx -> Server KeepAlive 설정이 동작안함
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            # Client 의 Ip 를 Server 로 전송
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /ws/ {
            proxy_pass http://message;
            # 이 설정이 없으면 Nginx -> Server KeepAlive 설정이 동작안함
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_read_timeout 86400s; # Nginx 와 Server 가 끊기는 시간 : 하루
            proxy_send_timeout 86400s; # Nginx 와 Server 가 끊기는 시간 : 하루
            # Client 의 Ip 를 Server 로 전송
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}